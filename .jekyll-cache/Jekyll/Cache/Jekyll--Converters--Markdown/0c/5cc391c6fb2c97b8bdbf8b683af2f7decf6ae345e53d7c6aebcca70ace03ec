I"X<p>Some of the contents in this page is based on the following resource:<br /> 
<a style="text-decoration: none;" href="/assets/projects/recon-robot/final-report.pdf" target="_blank">Report <i class="fa fa-file"></i></a><br />
<!-- <a style="text-decoration: none;" href="https://emanual.robotis.com/docs/en/platform/turtlebot3/overview/" target="_blank">TurtleBot3 <i class="fa fa-external-link-alt"></i></a> --></p>

<h1 id="introduction">Introduction</h1>
<p>Amid disaster response scenarios, the inherent danger and operational challenges often render it impractical for first responders to execute missions effectively. This situation highlights the indispensable role of autonomous robots as viable assets in such contexts. This project aimed to integrate autonomous navigation and object detection onto the open-source robot platform, TurtleBot3. Its objective was to conduct a reconnaissance mission, enabling the robot to map closed and unknown environments while identifying and pinpointing the poses of victims represented by AprilTags.</p>

<h1 id="robot-hardware-setup">Robot Hardware Setup</h1>
<p style="text-align: center;"><img src="/assets/projects/recon-robot/turtlebot3_burger_components.png" width="500" height="500" /><strong><br />Fig. 1: TurtleBot3 components <a href="#1">[1]</a>.</strong></p>
<p>The robot comprised of components in Fig. 1 and an additional Pi camera was mounted and connected to the SBC to detect AprilTags as shown in Fig. 2 below.</p>
<p style="text-align: center;"><img src="/assets/projects/recon-robot/pi-camera.png" width="300" height="300" /><strong><br />Fig. 2: Pi camera mounted on TurtleBot3.</strong></p>

<h1 id="robot-software-setup">Robot Software Setup</h1>
<p>In order to implement the sensors on the robot and create an effective development environment, several setups were required. First, a personal computer needed to have Ubuntu 20.04 and ROS Noetic installed for running ROS Master remotely. Dependant ROS packages and TurtleBot3 packages were installed as well. Secondly, the SBC’s microSD was burned with Raspberry Pi ROS Noetic image. Thirdly, required packages for the OpenCR firmware were installed on the SBC and uploaded to the OpenCR. Lastly, intrinsic camera calibration of the Pi camera was performed using a checkerboard. More detailed setup tutorials can be found <a style="text-decoration: none;" href="https://emanual.robotis.com/docs/en/platform/turtlebot3/quick-start/#pc-setup" target="_blank">here.</a><br /></p>

<h1 id="autonomous-navigation">Autonomous Navigation</h1>
<p style="text-align: center;"><img src="/assets/projects/recon-robot/explore-lite.png" width="800" height="300" /><strong><br />Fig. 3: ROS node architecture of <i>explore_lite</i> package <a href="#2">[2]</a>.</strong></p>
<p>The robot navigated a closed and unknown environment with the ROS packages in Fig. 3. SLAM was achieved by Gmapping SLAM with the LiDAR on the robot and it generated an occupancy grid map of the environment. <i>explore_lite</i> package implemented Frontier-Based Exploration based on the occupancy grid map and published movement commands to <i>move_base</i> node which calculated and controlled accurate robot wheel speeds from the movement commands.</p>

<h1 id="apriltag-detection">AprilTag Detection</h1>
<p style="text-align: center;"><img src="/assets/projects/recon-robot/tag-detection.png" width="800" height="300" /><strong><br />Fig. 4: ROS node architecture of <i>apriltags2_ros</i> package <a href="#3">[3]</a>.</strong></p>
<p>AprilTags were detected by the Pi camera with the ROS package in Fig. 4. The intrinsic camera parameters calculated from the software setup were used to calculate poses of the tages with respect to the camera frame. Extrinsic camera calibration was not necessary since the size of the tags were known and incorporated in the ROS package.</p>

<p>The poses of the tags had to be transformed from the camera frame to the map frame so that the tags could be displayed on the occupancy grid map.</p>

<h1 id="references">References</h1>
<p><a name="1"></a>[1] ROBOTIS e-Manual, “TurtleBot3 Specifications,” Available: https://emanual.robotis.com/docs/en/platform/turtlebot3/features/#specifications.<br />
<a name="2"></a>[2] ROS Wiki, “explore_lite,” Available: http://wiki.ros.org/explore_lite.<br />
<a name="3"></a>[3] ROS Wiki, “apriltag_ros,” Available: http://wiki.ros.org/apriltag_ros.<br /></p>
:ET